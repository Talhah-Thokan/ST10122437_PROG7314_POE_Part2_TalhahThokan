// Generated by view binder compiler. Do not edit!
package com.medassist.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.medassist.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemArticleModernBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView articleAuthor;

  @NonNull
  public final TextView articleDate;

  @NonNull
  public final ImageView articleImage;

  @NonNull
  public final TextView articleSummary;

  @NonNull
  public final TextView articleTitle;

  private ItemArticleModernBinding(@NonNull CardView rootView, @NonNull TextView articleAuthor,
      @NonNull TextView articleDate, @NonNull ImageView articleImage,
      @NonNull TextView articleSummary, @NonNull TextView articleTitle) {
    this.rootView = rootView;
    this.articleAuthor = articleAuthor;
    this.articleDate = articleDate;
    this.articleImage = articleImage;
    this.articleSummary = articleSummary;
    this.articleTitle = articleTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemArticleModernBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemArticleModernBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_article_modern, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemArticleModernBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.articleAuthor;
      TextView articleAuthor = ViewBindings.findChildViewById(rootView, id);
      if (articleAuthor == null) {
        break missingId;
      }

      id = R.id.articleDate;
      TextView articleDate = ViewBindings.findChildViewById(rootView, id);
      if (articleDate == null) {
        break missingId;
      }

      id = R.id.articleImage;
      ImageView articleImage = ViewBindings.findChildViewById(rootView, id);
      if (articleImage == null) {
        break missingId;
      }

      id = R.id.articleSummary;
      TextView articleSummary = ViewBindings.findChildViewById(rootView, id);
      if (articleSummary == null) {
        break missingId;
      }

      id = R.id.articleTitle;
      TextView articleTitle = ViewBindings.findChildViewById(rootView, id);
      if (articleTitle == null) {
        break missingId;
      }

      return new ItemArticleModernBinding((CardView) rootView, articleAuthor, articleDate,
          articleImage, articleSummary, articleTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.medassist.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.medassist.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookingBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton backButton;

  @NonNull
  public final MaterialButton bookButton;

  @NonNull
  public final TextView doctorNameText;

  @NonNull
  public final TextView doctorSpecialtyText;

  @NonNull
  public final TextInputEditText emailEditText;

  @NonNull
  public final TextInputEditText nameEditText;

  @NonNull
  public final TextInputEditText phoneEditText;

  @NonNull
  public final TextInputEditText reasonEditText;

  private ActivityBookingBinding(@NonNull ScrollView rootView, @NonNull MaterialButton backButton,
      @NonNull MaterialButton bookButton, @NonNull TextView doctorNameText,
      @NonNull TextView doctorSpecialtyText, @NonNull TextInputEditText emailEditText,
      @NonNull TextInputEditText nameEditText, @NonNull TextInputEditText phoneEditText,
      @NonNull TextInputEditText reasonEditText) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.bookButton = bookButton;
    this.doctorNameText = doctorNameText;
    this.doctorSpecialtyText = doctorSpecialtyText;
    this.emailEditText = emailEditText;
    this.nameEditText = nameEditText;
    this.phoneEditText = phoneEditText;
    this.reasonEditText = reasonEditText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_booking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      MaterialButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.bookButton;
      MaterialButton bookButton = ViewBindings.findChildViewById(rootView, id);
      if (bookButton == null) {
        break missingId;
      }

      id = R.id.doctorNameText;
      TextView doctorNameText = ViewBindings.findChildViewById(rootView, id);
      if (doctorNameText == null) {
        break missingId;
      }

      id = R.id.doctorSpecialtyText;
      TextView doctorSpecialtyText = ViewBindings.findChildViewById(rootView, id);
      if (doctorSpecialtyText == null) {
        break missingId;
      }

      id = R.id.emailEditText;
      TextInputEditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.nameEditText;
      TextInputEditText nameEditText = ViewBindings.findChildViewById(rootView, id);
      if (nameEditText == null) {
        break missingId;
      }

      id = R.id.phoneEditText;
      TextInputEditText phoneEditText = ViewBindings.findChildViewById(rootView, id);
      if (phoneEditText == null) {
        break missingId;
      }

      id = R.id.reasonEditText;
      TextInputEditText reasonEditText = ViewBindings.findChildViewById(rootView, id);
      if (reasonEditText == null) {
        break missingId;
      }

      return new ActivityBookingBinding((ScrollView) rootView, backButton, bookButton,
          doctorNameText, doctorSpecialtyText, emailEditText, nameEditText, phoneEditText,
          reasonEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

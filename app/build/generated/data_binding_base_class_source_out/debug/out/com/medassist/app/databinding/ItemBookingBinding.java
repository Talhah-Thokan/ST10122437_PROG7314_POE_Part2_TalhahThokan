// Generated by view binder compiler. Do not edit!
package com.medassist.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.medassist.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBookingBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView bookingDate;

  @NonNull
  public final TextView bookingDoctorName;

  @NonNull
  public final TextView bookingSpecialty;

  @NonNull
  public final TextView bookingStatus;

  @NonNull
  public final TextView bookingTime;

  private ItemBookingBinding(@NonNull CardView rootView, @NonNull TextView bookingDate,
      @NonNull TextView bookingDoctorName, @NonNull TextView bookingSpecialty,
      @NonNull TextView bookingStatus, @NonNull TextView bookingTime) {
    this.rootView = rootView;
    this.bookingDate = bookingDate;
    this.bookingDoctorName = bookingDoctorName;
    this.bookingSpecialty = bookingSpecialty;
    this.bookingStatus = bookingStatus;
    this.bookingTime = bookingTime;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBookingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBookingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_booking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBookingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookingDate;
      TextView bookingDate = ViewBindings.findChildViewById(rootView, id);
      if (bookingDate == null) {
        break missingId;
      }

      id = R.id.bookingDoctorName;
      TextView bookingDoctorName = ViewBindings.findChildViewById(rootView, id);
      if (bookingDoctorName == null) {
        break missingId;
      }

      id = R.id.bookingSpecialty;
      TextView bookingSpecialty = ViewBindings.findChildViewById(rootView, id);
      if (bookingSpecialty == null) {
        break missingId;
      }

      id = R.id.bookingStatus;
      TextView bookingStatus = ViewBindings.findChildViewById(rootView, id);
      if (bookingStatus == null) {
        break missingId;
      }

      id = R.id.bookingTime;
      TextView bookingTime = ViewBindings.findChildViewById(rootView, id);
      if (bookingTime == null) {
        break missingId;
      }

      return new ItemBookingBinding((CardView) rootView, bookingDate, bookingDoctorName,
          bookingSpecialty, bookingStatus, bookingTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.medassist.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.medassist.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookingConfirmationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView appointmentDateText;

  @NonNull
  public final TextView appointmentTimeText;

  @NonNull
  public final TextView bookingIdText;

  @NonNull
  public final TextView doctorNameText;

  @NonNull
  public final TextView doctorSpecialtyText;

  @NonNull
  public final MaterialButton homeButton;

  @NonNull
  public final MaterialButton newBookingButton;

  @NonNull
  public final TextView patientNameText;

  private ActivityBookingConfirmationBinding(@NonNull LinearLayout rootView,
      @NonNull TextView appointmentDateText, @NonNull TextView appointmentTimeText,
      @NonNull TextView bookingIdText, @NonNull TextView doctorNameText,
      @NonNull TextView doctorSpecialtyText, @NonNull MaterialButton homeButton,
      @NonNull MaterialButton newBookingButton, @NonNull TextView patientNameText) {
    this.rootView = rootView;
    this.appointmentDateText = appointmentDateText;
    this.appointmentTimeText = appointmentTimeText;
    this.bookingIdText = bookingIdText;
    this.doctorNameText = doctorNameText;
    this.doctorSpecialtyText = doctorSpecialtyText;
    this.homeButton = homeButton;
    this.newBookingButton = newBookingButton;
    this.patientNameText = patientNameText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookingConfirmationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookingConfirmationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_booking_confirmation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookingConfirmationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appointmentDateText;
      TextView appointmentDateText = ViewBindings.findChildViewById(rootView, id);
      if (appointmentDateText == null) {
        break missingId;
      }

      id = R.id.appointmentTimeText;
      TextView appointmentTimeText = ViewBindings.findChildViewById(rootView, id);
      if (appointmentTimeText == null) {
        break missingId;
      }

      id = R.id.bookingIdText;
      TextView bookingIdText = ViewBindings.findChildViewById(rootView, id);
      if (bookingIdText == null) {
        break missingId;
      }

      id = R.id.doctorNameText;
      TextView doctorNameText = ViewBindings.findChildViewById(rootView, id);
      if (doctorNameText == null) {
        break missingId;
      }

      id = R.id.doctorSpecialtyText;
      TextView doctorSpecialtyText = ViewBindings.findChildViewById(rootView, id);
      if (doctorSpecialtyText == null) {
        break missingId;
      }

      id = R.id.homeButton;
      MaterialButton homeButton = ViewBindings.findChildViewById(rootView, id);
      if (homeButton == null) {
        break missingId;
      }

      id = R.id.newBookingButton;
      MaterialButton newBookingButton = ViewBindings.findChildViewById(rootView, id);
      if (newBookingButton == null) {
        break missingId;
      }

      id = R.id.patientNameText;
      TextView patientNameText = ViewBindings.findChildViewById(rootView, id);
      if (patientNameText == null) {
        break missingId;
      }

      return new ActivityBookingConfirmationBinding((LinearLayout) rootView, appointmentDateText,
          appointmentTimeText, bookingIdText, doctorNameText, doctorSpecialtyText, homeButton,
          newBookingButton, patientNameText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

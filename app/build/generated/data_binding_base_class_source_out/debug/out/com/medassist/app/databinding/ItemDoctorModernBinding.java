// Generated by view binder compiler. Do not edit!
package com.medassist.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.medassist.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDoctorModernBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final MaterialButton bookButton;

  @NonNull
  public final TextView doctorAvailability;

  @NonNull
  public final TextView doctorDistance;

  @NonNull
  public final TextView doctorName;

  @NonNull
  public final TextView doctorPrice;

  @NonNull
  public final TextView doctorRating;

  @NonNull
  public final TextView doctorSpecialty;

  private ItemDoctorModernBinding(@NonNull CardView rootView, @NonNull MaterialButton bookButton,
      @NonNull TextView doctorAvailability, @NonNull TextView doctorDistance,
      @NonNull TextView doctorName, @NonNull TextView doctorPrice, @NonNull TextView doctorRating,
      @NonNull TextView doctorSpecialty) {
    this.rootView = rootView;
    this.bookButton = bookButton;
    this.doctorAvailability = doctorAvailability;
    this.doctorDistance = doctorDistance;
    this.doctorName = doctorName;
    this.doctorPrice = doctorPrice;
    this.doctorRating = doctorRating;
    this.doctorSpecialty = doctorSpecialty;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDoctorModernBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDoctorModernBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_doctor_modern, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDoctorModernBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookButton;
      MaterialButton bookButton = ViewBindings.findChildViewById(rootView, id);
      if (bookButton == null) {
        break missingId;
      }

      id = R.id.doctorAvailability;
      TextView doctorAvailability = ViewBindings.findChildViewById(rootView, id);
      if (doctorAvailability == null) {
        break missingId;
      }

      id = R.id.doctorDistance;
      TextView doctorDistance = ViewBindings.findChildViewById(rootView, id);
      if (doctorDistance == null) {
        break missingId;
      }

      id = R.id.doctorName;
      TextView doctorName = ViewBindings.findChildViewById(rootView, id);
      if (doctorName == null) {
        break missingId;
      }

      id = R.id.doctorPrice;
      TextView doctorPrice = ViewBindings.findChildViewById(rootView, id);
      if (doctorPrice == null) {
        break missingId;
      }

      id = R.id.doctorRating;
      TextView doctorRating = ViewBindings.findChildViewById(rootView, id);
      if (doctorRating == null) {
        break missingId;
      }

      id = R.id.doctorSpecialty;
      TextView doctorSpecialty = ViewBindings.findChildViewById(rootView, id);
      if (doctorSpecialty == null) {
        break missingId;
      }

      return new ItemDoctorModernBinding((CardView) rootView, bookButton, doctorAvailability,
          doctorDistance, doctorName, doctorPrice, doctorRating, doctorSpecialty);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
